FROM kalilinux/kali-rolling:latest

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV KALI_AUTOMATION_HOME=/kali-automation

# Update package lists and install essential packages
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    curl \
    wget \
    vim \
    nano \
    htop \
    net-tools \
    iputils-ping \
    dnsutils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install core Python packages for automation
RUN pip3 install --no-cache-dir \
    asyncio \
    aiohttp \
    requests \
    beautifulsoup4 \
    lxml \
    yaml \
    jinja2 \
    markdown \
    pandas \
    numpy \
    matplotlib \
    seaborn \
    plotly \
    bokeh \
    networkx \
    scikit-learn \
    cryptography \
    pyyaml \
    click \
    rich \
    typer \
    pydantic \
    fastapi \
    uvicorn \
    sqlalchemy \
    psycopg2-binary \
    redis \
    celery \
    flower \
    prometheus-client \
    structlog \
    python-json-logger \
    watchdog \
    filelock \
    send2trash \
    zipfile36 \
    rarfile \
    py7zr \
    netifaces \
    pycryptodome \
    bcrypt \
    python-jose \
    PyJWT \
    bandit \
    pytest \
    pytest-asyncio \
    pytest-cov \
    pytest-mock \
    sphinx \
    sphinx-rtd-theme \
    ruff \
    autoflake \
    isort \
    black \
    mypy \
    coverage

# Create automation directories
RUN mkdir -p /kali-automation/{tools,scripts,results,logs,configs,reports,evidence,templates}

# Set working directory
WORKDIR /kali-automation

# Copy automation code
COPY kali_automation/ /kali-automation/
COPY tools/ /kali-automation/tools/
COPY automation/ /kali-automation/automation/
COPY configs/ /kali-automation/configs/

# Set permissions
RUN chmod -R 755 /kali-automation

# Create a simple startup script
RUN echo '#!/bin/bash\n\
echo "🚀 Starting Kali Linux Automation Platform..."\n\
echo "📁 Working directory: $(pwd)"\n\
echo "🐍 Python version: $(python3 --version)"\n\
echo "📦 Installed packages: $(pip3 list | wc -l)"\n\
echo "🔧 Available tools: $(ls tools/ | wc -l)"\n\
echo "⚙️  Starting automation engine..."\n\
python3 -c "from automation.complete_automation_engine import CompleteAutomationEngine; print(\"✅ Automation engine ready!\")"\n\
echo "🌐 Starting web interface..."\n\
python3 kali_orchestrator.py\n\
' > /kali-automation/start.sh && chmod +x /kali-automation/start.sh

# Expose ports
EXPOSE 8001 8002 8003 8004 8005

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8001/health || exit 1

# Default command
CMD ["/kali-automation/start.sh"]
