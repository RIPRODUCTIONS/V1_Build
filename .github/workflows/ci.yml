name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install alembic syft cosign trivy || true
      - name: Type check (mypy)
        working-directory: backend
        run: |
          MYPY_CACHE_DIR=/tmp/mypy_cache mypy --config-file mypy.ini app
      - name: Generate SBOM (Syft)
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          syft dir:. -o json > sbom.json || true
      - name: Build backend image
        run: |
          docker build -t builder-backend:ci ./backend
      - name: Trivy image scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: builder-backend:ci
          format: table
          exit-code: 0
      - name: Smoke tests
        working-directory: backend
        run: |
          python - << 'PY'
          import requests
          print('ok')
          PY

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install and build web
        working-directory: apps/web
        run: |
          npm ci
          npm run build --if-present

  precommit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install pre-commit
        run: |
          pip install pre-commit
      - name: Run pre-commit on changed files
        run: |
          pre-commit run --all-files || true
          pytest -q

  web:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install web deps
        working-directory: apps/web
        run: npm ci
      - name: Build web
        working-directory: apps/web
        env:
          NEXT_PUBLIC_API_BASE_URL: http://localhost:8000
          NEXT_PUBLIC_INTERNAL_API_KEY: test-key
        run: npm run build
  spelling-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install codespell
        run: pip install codespell
      - name: Run codespell (src + docs)
        run: |
          codespell -q 3 -S ".git,.venv,apps/web/node_modules,apps/web/.next,backups,toolkits,projects,src/ai_toolbox_20gb" \
            backend/app apps/web/src docs

  security-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    continue-on-error: true
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          severity: CRITICAL,HIGH

  k6-smoke:
    runs-on: ubuntu-latest
    needs: [web]
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Start API (background)
        env:
          DATABASE_URL: sqlite:///./dev-ci.db
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 --app-dir backend > api.log 2>&1 &
          for i in {1..60}; do curl -sf http://127.0.0.1:8000/health/live && break || sleep 1; done
      - name: Run k6 smoke
        run: |
          docker run --rm -e API=http://127.0.0.1:8000 -v $PWD/scripts:/scripts grafana/k6 run /scripts/k6_smoke.js
