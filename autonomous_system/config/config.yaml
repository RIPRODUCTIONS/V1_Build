# Autonomous Task Solver System Configuration
# Main configuration file for production deployment

# System Configuration
system:
  name: "Autonomous Task Solver"
  version: "1.0.0"
  environment: "production"
  debug: false
  log_level: "INFO"

  # Data paths
  data_path: "/app/data"
  logs_path: "/app/logs"
  config_path: "/app/config"

  # Database configuration
  database:
    type: "sqlite"  # sqlite, postgresql
    path: "/app/data/databases/autonomous_system.db"
    host: "localhost"
    port: 5432
    name: "autonomous_system"
    user: "autonomous_user"
    password: "${POSTGRES_PASSWORD}"

  # Redis configuration
  redis:
    host: "localhost"
    port: 6379
    password: "${REDIS_PASSWORD}"
    db: 0
    max_connections: 20

# AI Model Configuration
ai_models:
  # OpenAI models
  openai:
    api_key: "${OPENAI_API_KEY}"
    base_url: "https://api.openai.com/v1"
    models:
      - "gpt-4"
      - "gpt-4-turbo"
      - "gpt-3.5-turbo"
    default_model: "gpt-4"
    max_tokens: 4000
    temperature: 0.7

  # Anthropic models
  anthropic:
    api_key: "${ANTHROPIC_API_KEY}"
    base_url: "https://api.anthropic.com"
    models:
      - "claude-3-opus-20240229"
      - "claude-3-sonnet-20240229"
      - "claude-3-haiku-20240307"
    default_model: "claude-3-sonnet-20240229"
    max_tokens: 4000

  # Ollama models (local)
  ollama:
    base_url: "http://localhost:11434"
    models:
      - "llama3.1:8b"
      - "mistral:7b"
      - "codellama:7b"
    default_model: "llama3.1:8b"

  # OSS-20B models (local)
  oss20b:
    model_path: "/app/data/models/oss20b"
    models:
      - "oss20b"
    default_model: "oss20b"
    device: "auto"  # auto, cpu, cuda, mps
    quantization: "4bit"  # 4bit, 8bit, 16bit

# Task Detection Configuration
task_detection:
  # Email monitoring
  email:
    enabled: true
    imap_server: "${IMAP_SERVER}"
    imap_port: 993
    username: "${EMAIL_USERNAME}"
    password: "${EMAIL_PASSWORD}"
    check_interval: 300  # seconds
    folders: ["INBOX", "Tasks", "Automation"]

  # Slack monitoring
  slack:
    enabled: true
    bot_token: "${SLACK_BOT_TOKEN}"
    channels: ["#automation", "#tasks"]
    check_interval: 60  # seconds

  # Calendar monitoring
  calendar:
    enabled: true
    google_calendar_id: "${GOOGLE_CALENDAR_ID}"
    check_interval: 300  # seconds

  # Webhook monitoring
  webhook:
    enabled: true
    port: 9001
    endpoints: ["/webhook/task", "/webhook/automation"]

  # File system monitoring
  file_system:
    enabled: true
    watch_paths: ["/app/data/uploads", "/app/data/tasks"]
    file_patterns: ["*.json", "*.yaml", "*.txt"]
    check_interval: 60  # seconds

# Task Classification Configuration
task_classification:
  # AI model for classification
  model: "gpt-4"

  # Classification categories
  categories:
    - "research"
    - "automation"
    - "data_analysis"
    - "content_generation"
    - "system_maintenance"
    - "user_support"
    - "monitoring"
    - "optimization"

  # Priority levels
  priorities:
    - "low"
    - "medium"
    - "high"
    - "critical"
    - "urgent"

  # Confidence thresholds
  confidence_threshold: 0.7
  min_confidence: 0.5

# Model Selection Configuration
model_selection:
  # Selection criteria weights
  criteria_weights:
    cost: 0.3
    performance: 0.3
    privacy: 0.2
    availability: 0.2

  # Cost thresholds
  cost_thresholds:
    low: 0.01
    medium: 0.05
    high: 0.10
    unlimited: 1.0

  # Performance thresholds
  performance_thresholds:
    low: 0.5
    medium: 0.7
    high: 0.9

  # Model capabilities mapping
  model_capabilities:
    gpt-4:
      research: 0.9
      automation: 0.8
      data_analysis: 0.9
      content_generation: 0.95
    claude-3-sonnet:
      research: 0.95
      automation: 0.85
      data_analysis: 0.9
      content_generation: 0.9
    llama3.1:8b:
      research: 0.6
      automation: 0.7
      data_analysis: 0.5
      content_generation: 0.6

# Task Execution Configuration
task_execution:
  # Execution modes
  modes:
    - "autonomous"  # Fully automated
    - "supervised"  # Human approval required
    - "hybrid"      # Automated with human oversight

  # Default execution mode
  default_mode: "autonomous"

  # Execution timeouts
  timeouts:
    task_startup: 30  # seconds
    step_execution: 300  # seconds
    total_execution: 3600  # seconds

  # Retry configuration
  retry:
    max_attempts: 3
    backoff_factor: 2
    max_backoff: 300  # seconds

  # Resource limits
  resources:
    max_concurrent_tasks: 10
    max_memory_per_task: "2GB"
    max_cpu_per_task: 2

# Decision Engine Configuration
decision_engine:
  # Decision making parameters
  decision_threshold: 0.7
  confidence_threshold: 0.6

  # Learning parameters
  learning_rate: 0.1
  exploration_rate: 0.1

  # Optimization intervals
  optimization_interval: 3600  # seconds
  decision_review_interval: 1800  # seconds

# Performance Tracking Configuration
performance_tracking:
  # Metrics collection
  collection_interval: 60  # seconds
  analysis_interval: 300  # seconds

  # Data retention
  retention_days: 90

  # Learning parameters
  learning_rate: 0.1
  min_data_points: 10

  # Pattern recognition
  pattern_detection:
    enabled: true
    min_confidence: 0.7
    time_window_hours: 48

# System Monitoring Configuration
system_monitoring:
  # Monitoring intervals
  metrics_interval: 30  # seconds
  health_interval: 60  # seconds

  # Alert thresholds
  thresholds:
    cpu_usage:
      warning: 70.0
      critical: 90.0
    memory_usage:
      warning: 80.0
      critical: 95.0
    disk_usage:
      warning: 85.0
      critical: 95.0
    response_time:
      warning: 2000.0
      critical: 5000.0
    error_rate:
      warning: 5.0
      critical: 15.0

  # Alert escalation
  escalation:
    enabled: true
    escalation_delay: 300  # seconds
    max_escalation_levels: 3

  # Notification channels
  notifications:
    email:
      enabled: true
      smtp_server: "${SMTP_SERVER}"
      smtp_port: 587
      username: "${SMTP_USERNAME}"
      password: "${SMTP_PASSWORD}"
      from_email: "${FROM_EMAIL}"
      to_email: "${TO_EMAIL}"
      use_tls: true
    slack:
      enabled: true
      webhook_url: "${SLACK_WEBHOOK_URL}"
    webhook:
      enabled: false
      webhook_url: "${WEBHOOK_URL}"

# Vector Database Configuration
vector_database:
  # ChromaDB configuration
  chromadb:
    enabled: true
    host: "localhost"
    port: 8002
    collection_name: "autonomous_system"

  # Pinecone configuration
  pinecone:
    enabled: false
    api_key: "${PINECONE_API_KEY}"
    environment: "${PINECONE_ENVIRONMENT}"
    index_name: "autonomous-system"

  # Weaviate configuration
  weaviate:
    enabled: false
    host: "localhost"
    port: 8080
    class_name: "AutonomousSystem"

# Security Configuration
security:
  # Authentication
  authentication:
    enabled: true
    jwt_secret: "${JWT_SECRET}"
    jwt_expiry: 3600  # seconds

  # Rate limiting
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_size: 20

  # API security
  api_security:
    cors_origins: ["*"]
    api_key_header: "X-API-Key"
    api_key: "${API_KEY}"

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

  # File logging
  file_logging:
    enabled: true
    log_file: "/app/logs/autonomous_system.log"
    max_size: "100MB"
    backup_count: 5

  # Structured logging
  structured_logging:
    enabled: true
    include_timestamp: true
    include_level: true
    include_module: true

# Development Configuration
development:
  # Debug mode
  debug: false

  # Hot reload
  hot_reload: false

  # Development tools
  tools:
    jupyter: false
    ipython: false
    debugpy: false

  # Testing
  testing:
    enabled: false
    test_database: "test_autonomous_system.db"
    mock_external_services: true
