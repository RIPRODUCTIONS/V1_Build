version: '3.8'

services:
  ai-framework:
    build:
      context: ./ai_framework
      dockerfile: Dockerfile
      platforms:
        - linux/arm64
    container_name: ai-framework-quick
    ports:
      - "8100:8000"  # Changed port
    environment:
      - DATABASE_URL=postgresql://ai_user:secure_pass@postgres:5432/ai_framework
      - REDIS_URL=redis://:redis_pass@redis:6379/0
      - WORKERS=8
    volumes:
      - ./ai_framework/logs:/app/logs
    networks:
      - ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    platform: linux/arm64
    container_name: postgres-quick
    ports:
      - "5434:5432"  # Changed port
    environment:
      POSTGRES_DB: ai_framework
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: secure_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    platform: linux/arm64
    container_name: redis-quick
    ports:
      - "6380:6379"  # Changed port
    command: redis-server --requirepass redis_pass
    volumes:
      - redis_data:/data
    networks:
      - ai-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    platform: linux/arm64
    container_name: grafana-quick
    ports:
      - "3001:3000"  # Changed port
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - ai-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    platform: linux/arm64
    container_name: prometheus-quick
    ports:
      - "9091:9090"  # Changed port
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ai-network
    restart: unless-stopped

networks:
  ai-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:
