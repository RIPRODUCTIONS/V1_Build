version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports: ["5432:5432"]
    profiles: ["dev", "prod"]
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    profiles: ["dev", "prod"]
  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    command: server /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports: ["9000:9000", "9001:9001"]
    profiles: ["dev", "prod"]
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/app
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: app-artifacts
      SECURE_MODE: "1"
    depends_on: [db, redis, minio]
    ports: ["8000:8000"]
    command: bash -lc "uvicorn backend.app.main:app --host 0.0.0.0 --port 8000"
    profiles: ["dev", "prod"]
version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-builder}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  api:
    build:
      context: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-builder}
      JWT_SECRET: ${JWT_SECRET:-dev-secret}
      SENTRY_DSN: ${SENTRY_DSN:-}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}
      CI_ENV: ${CI_ENV:-false}
      CI_CLEANUP_TOKEN: ${CI_CLEANUP_TOKEN:-}
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
  worker:
    build:
      context: ./backend
    command: celery -A app.agent.tasks.celery_app worker --loglevel=INFO
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-builder}
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT_URL: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: artifacts
    depends_on:
      - db
      - redis
      - minio
  beat:
    build:
      context: ./backend
    command: celery -A app.agent.tasks.celery_app beat --loglevel=INFO
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - redis
  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
volumes:
  db_data:
  redis_data:
  minio_data:
